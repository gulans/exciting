"""
Module containing default tolerances for RT-TDDFT output

Each entry has a unique key and value = {'tolerance':value, 'unit':Unit.unit}
where Unit is an enum class.  If a quantity does not have an associated unit,
unit = null.

Keys were generated by using the tolerance.py script. See that for command line
details.

Tolerances in default_tolerances cover files
  * JIND.OUT
  * NEXC.OUT
  * ETOT_RTTDDFT.OUT
  * EIGVAL_*.OUT
  * PROJ_*.OUT
  * ATOM_????.OUT
  * FCR_????.OUT
  * FEXT_????.OUT
  * FHF_????.OUT
  * FVAL_????.OUT
Remark:
? is an integer 0-9
* is an integer >= 0 (e.g. 541)
"""
from excitingtools import Unit

from ..tol_classes import DefaultTolerances, Tol

default = DefaultTolerances(integer=Tol(0),
                            float=Tol(1.e-8),
                            energy=Tol(1.e-8, Unit.hartree),
                            oscillator_strength=Tol(1.e-8, Unit.null),
                            time=Tol(1e-8, Unit.au),               # Which would be hbar / E_H
                            current_density=Tol(1e-8, Unit.au)     # Which would be  (e * E_H) / (hbar * a0)
                            length=Tol(1e-8, Unit.bohr)
                            velocity=Tol(1e-8, Unit.bohr_velocity)
                            force=Tol(1e-8, Unit.force)
                            )

rt_tddft_jind = {
    'Time': default.time,
    'Jx': default.current_density,
    'Jy': default.current_density,
    'Jz': default.current_density
}

rt_tddft_nexc = {
    'Time': default.time,
    'number_electrons_GroundState': default.float,
    'number_electrons_ExcitedState': default.float,
    'sum': default.float
}

rt_tddft_etot = {
    'Time': default.time,
    'ETOT': default.energy,
    'Madelung': default.energy,
    'Eigenvalues-Core': default.energy,
    'Eigenvalues-Valence': default.energy,
    'Exchange': default.energy,
    'Correlation': default.energy,
    'XC-potential': default.energy,
    'Coulomb pot. energy': default.energy
}

rt_tddft_eigval = {
    'ik': default.integer,
    'eigenvalues': default.energy,
}

rt_tddft_proj = {
    'ik': default.integer,
    'projection': default.float
}

rt_tddft_atom = {
    'Time': default.time,
    'x': default.length,
    'y': default.length,
    'z': default.length,
    'vx': default.velocity,
    'vy': default.velocity,
    'vz': default.velocity,
    'Fx': default.force,
    'Fy': default.force,
    'Fz': default.force
}

rt_tddft_force = {
    'Time': default.time,
    'Fx': default.force,
    'Fy': default.force,
    'Fz': default.force,
}

rt_tddft_tolerances = {'JIND.OUT': rt_tddft_jind,
                      'NEXC.OUT': rt_tddft_nexc,
                      'ETOT_RTTDDFT.OUT': rt_tddft_etot,
                      'EIGVAL_??.OUT': rt_tddft_eigval,
                      'PROJ_??.OUT': rt_tddft_proj,
                      'ATOM_????.OUT': rt_tddft_atom,
                      'FCR': rt_tddft_force, 
                      'FEXT': rt_tddft_force, 
                      'FHF': rt_tddft_force, 
                      'FVAL': rt_tddft_force, 
                      }
