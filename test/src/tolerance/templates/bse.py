"""
Module containing default tolerances for BSE output

Each entry has a unique key and value = {'tolerance':value, 'unit':Unit.unit}
where Unit is an enum class.  If a quantity does not have an associated unit,
unit = null.

Keys were generated by using the tolerance.py script. See that for command line
details.

Tolerances in default_tolerances cover files (** is one of 11, 22, 33):
  * EPSILON_NAR_BSE-singlet-TDA-BAR_SCR-full_OC**.OUT
  * EXCITON_NAR_BSE-singlet-TDA-BAR_SCR-full_OC**.OUT
"""
from excitingtools import Unit

from ..tol_classes import DefaultTolerances, Tol

default = DefaultTolerances(integer=Tol(0),
                            float=Tol(1.e-8),
                            str=Tol(''),
                            energy=Tol(1.e-7, Unit.ev),
                            frequency=Tol(1.e-8, Unit.ev),
                            oscillator_strength=Tol(1.e-8, Unit.null)
                            )

# Tolerances for EPSILON_NAR_BSE-singlet-TDA-BAR_SCR-full_OC**.OUT
bse_epsilon_tols = {
    'frequency': default.frequency,
    'real_oscillator_strength': default.oscillator_strength,
    'imag_oscillator_strength': default.oscillator_strength,
    'real_oscillator_strength_kkt': default.oscillator_strength
}

# Tolerances for EXCITON_NAR_BSE-singlet-TDA-BAR_SCR-full_OC**.OUT
bse_exciton_tols = {
    'state': default.integer,
    'energy': default.energy,
    'energy_shifted': default.energy, 
    'abs_oscillator_strength': default.oscillator_strength,
    'real_oscillator_strength': default.oscillator_strength,
    'imag_oscillator_strength': default.oscillator_strength
}


bse_tolerances = {'EPSILON_??.OUT': bse_epsilon_tols,
                  'EXCITON_??.OUT': bse_exciton_tols}
