# make.inc file for Sirius.
#
# Notes
# ----------------------
#
# Variables Definitions Required (Adjust as appropriate)
# * Both are defined as environment variables in `build/utilities/docker/Dockerfile_ci_sirius`
# * $SIRIUS_ROOT  The installation location of sirius (hard-coded in this file)
# * $SPEC         Sirius spack specification (if using spack) 
#
# Build exciting, linking to a manually-built sirius:
# * Edit $SIRIUS_ROOT in this file to point to sirius's installation directory.
# * Build exciting with `make mpiandsmp -j 4`. 
#
# Build exciting, linking to sirius, in a spack env:
# * Follow the instructions in `build/utilities/docker/Dockerfile_ci_sirius` to build sirius with spack
#   - Execute `RUN` commands in the shell
#   - `ENV` should be replaced with `export` when running in the shell (sets an environment variable)
# 
# * Edit $SIRIUS_ROOT in this file to point to sirius's installation directory.
#  
# * export SPEC = ... (see definition in `Dockerfile_ci_sirius`)
# 
# * Make command: /spack/bin/spack build-env $SPEC -- make mpiandsmp -j 4
#   - Executes a command (in this case, make) in a spack environment (analogous to python's venv)
#   - A spack environment must exist:                See `Create an environment` in `Dockerfile_ci_sirius`
#   - $SPEC must be specified, and added to the env: See `Create an environment` in `Dockerfile_ci_sirius`
#
# * `/spack/bin/spack` is the path/2/spack. Replace as appropriate.
#   - If spack is sourced (https://spack.readthedocs.io/en/latest/getting_started.html#installation), 
#     and in the $PATH, one can build exciting with:
#   - spack build-env $SPEC -- make mpiandsmp -j 4
#
# Gotchas
# --------------------------
# * The library path to sirius is defined as `${SIRIUS_ROOT}/lib` below.
#   However, spack sometimes uses `${SIRIUS_ROOT}/lib64` instead. If that is the case,
#   modify the make.inc
#
# * If building in docker, using the image defined by `Dockerfile_ci_sirius`, SIRIUS_ROOT
#   is defined, however the make.inc may not pick it up (it's not clear to me why that is).
#   As such, SIRIUS_ROOT is currently hard-coded below. 

# Compiler, flags and preprocessing variables
F90 = gfortran
F77 = $(F90)

# Required for compilation of LibXC
FCCPP = cpp

# Flags
F90_OPTS = -O3 -march=native -ffree-line-length-0  -m64  -I"${MKLROOT}/include"
F77_OPTS = -O3

# SIRIUS_ROOT as based on the Dockerfile - this directory name is arbitrary
SIRIUS_ROOT=/spack-sirius-install
ifeq ($(SIRIUS_ROOT),)
$(error SIRIUS_ROOT must be set in the environment or hard-coded in make.inc)
endif
SIRIUS_CPP_FLAGS=-DSIRIUS -I$(SIRIUS_ROOT)/include/sirius

# Note, CPP_ON_OPTS is used for all libs, but unnecessary options get ignored
CPP_ON_OPTS = -cpp -DXS -DISO $(SIRIUS_CPP_FLAGS)

F90_DEBUGOPTS = -g -O0 -DUSE_ASSERT -fbounds-check -fbacktrace -Wall -Wextra -ffree-line-length-0 -fcheck=all -finit-integer=2147483647 -finit-real=snan \
-frecord-gcc-switches -finit-character=42 -finit-loical=true -ffpe-trap=invalid,zero,overflow -fdump-core -fstack-protector-all -pipe
F77_DEBUGOPTS = $(F90_DEBUGOPTS)

# Libaries
# Use native blas/lapack by default
export USE_SYS_LAPACK=true
LIB_LPK =  -L${MKLROOT}/lib/intel64 -Wl,--no-as-needed -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -lm -ldl
LIB_SIRIUS = -L${SIRIUS_ROOT}/lib -lsirius -Wl,-rpath="${SIRIUS_ROOT}/lib"
LIB_FFT = fftlib.a
LIB_BZINT = libbzint.a
LIBS = $(LIB_LPK) $(LIB_FFT) $(LIB_BZINT) $(LIB_SIRIUS)

# SMP and MPI compilers, flags and preprocessing variables
MPIF90 = mpif90
MPIF90_OPTS = -DMPI

SMPF90_OPTS = -fopenmp -DUSEOMP
SMPF77_OPTS = $(SMPF90_OPTS)

BUILDMPI = true
BUILDSMP = true
BUILDMPISMP = true
